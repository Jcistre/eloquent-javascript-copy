// /////////////////////////////////////////////////////////////////////////////
// flatten /////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function flatten(array) {
let output = []
  for (let i = 0; i < array.length; i++) {
    for (let j = 0; j < array[i].length; j++) {
      output.push(array[i][j])
    }
}
return output;
}

// /////////////////////////////////////////////////////////////////////////////
// loop ////////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function loop(n, test, update, body) {
while (test(n) === true) {
  body(n)
  n = update(n)
  }
}

// /////////////////////////////////////////////////////////////////////////////
// every ///////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function every(array, test) {
  if (array.length === 0) {
    return true
  }
  let yesSir = array.filter(function(yes) {
    if (test(yes) === true) {
      return yes
    }
  })
  if (yesSir.length === array.length) {
    return true;
  } else {
    return false
  }
  }

// /////////////////////////////////////////////////////////////////////////////
// dominantDirection ///////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function dominantDirection(str) {
  let ltr = [];
  let rtl = [];
  for (let i = 0; i < str.length; i++) {
    let script = characterScript(str.charCodeAt(i))
    if (script !== null) {
      if (script.direction === 'ltr') {
        ltr.push(script);
      } else {
        rtl.push(script);
      }
    }
  }
  if (ltr.length > rtl.length) {
    return "ltr";
  } else {
    return "rtl";
  }
}

// /////////////////////////////////////////////////////////////////////////////
//  //////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    flatten,
    loop,
    every,
    dominantDirection,
  };
};